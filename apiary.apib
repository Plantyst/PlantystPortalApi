FORMAT: 1A
HOST: https://portal.plantyst.com/api/

# Plantyst Portal

Plantyst Portal API is a REST API designed to access data related to customer measurements like basic time series, metrics or annotations.

# Group Measurements

This section contains endpoints for the resources related to measurements and their basic properties.

## Measurements Collection [/Measurements/{?currentSubscriptionOnly}]

### List Measurements [GET]

Gets the list of measurements for which the current user has the access rights for view or higher. The rights used in the Plantyst application are the following:
* _View_ - right to view measurement data
* _Contributor_ - right to add or update additional information (like annotations)
* _Admin_ - right to update measurement data (user access, tags, ...)
* _Owner_ - same as Admin, but the access rigths can't be revoked

Along with the measurements, additional data are sent as the embedded resources as follows:
* `timezone` array of all distinct timezones assigned to measurements
* `tag` array of all distinct tags assigned to measurements
* `measurementDataVersion` array of measurement data versions
* `measurement` array of all accessible measurements for the current user

+ Request
    + Headers

            Authorization: Token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJBY2Nlc3NLZXkiOiIiLCJpc3MiOiIiLCJhdWQiOiJodHRwczovL215LnBsYW50eXN0LmNvbS8iLCJleHAiOjE0OTAwMDAwMDAsIm5iZiI6MTQ5ODgxODcxOH0.yNf36ZlgfyFpCUwo2v3N0PEDZGcxlPaLaEwx2in796Y

+ Parameters
    + currentSubscriptionOnly (boolean, `true`) ... Determines whether all measurements or only measurements from the user's current subscription are returned.

+ Response 200 (application/hal+json)
    + Attributes
        + Measurement (array)
            + (object)
                + `measurementId` (number) - unique identifier of the measurement
                + `title` (string) - title of the measurement
                + `quantityType` (string) - type of the measurement physical quantity
                + `archived` (boolean) - determines the measurement visibility in Portal
                + `first` (string) - date time of the first collected data
                + `rights` (array)
                    + (object)
                        + assigned user right for the measurement

        + Timezone (array)
            + (object)
                + `id` (string) - the time zone identifier
                + `name` (string) - the time zone full name
                + `iana` (string) - the time zone IANA codeMe

    + Body

            {
                "timeZones": [
                    {
                        "id": "Central Europe Standard Time",
                        "name": "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
                        "iana": "Europe/Prague",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/TimeZone/Central%20Europe%20Standard%20Time",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                    "_embedded": null
                    }
                ],
                "tags": [
                    {
                        "id": "83",
                        "title": "Technology",
                        "color": "#E67E22",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/Tag/83",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                        "_embedded": null
                    },
                    {
                        "id": "82",
                        "title": "Shop 1",
                        "color": "#1ABC9C",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/Tag/82",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                        "_embedded": null
                    }
                ],
                "dataVersions": [
                    {
                        "id": "414",
                        "title": "TimeSeries",
                        "lastModified": "2016-10-25T16:05:00Z",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/MeasurementDataVersion/414",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                        "_embedded": null
                    },
                    {
                        "id": "415",
                        "title": "TimeSeries",
                        "lastModified": "2016-10-25T16:05:00Z",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/MeasurementDataVersion/415",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                        "_embedded": null
                    }
                ],
                "resourceList": [
                {
                    "measurementId": 3,
                    "title": "Stroj 1",
                    "description": "Access for presentations",
                    "quantityType": "speed",
                    "archived": false,
                    "first": "2016-01-01T00:00:00Z",
                    "rights": [
                        "Admin"
                    ],
                    "_links": [
                        {
                            "rel": "self",
                            "href": "~/Api/Measurement/695",
                            "title": null,
                            "isTemplated": false
                        },
                    {
                        "rel": "timezone",
                        "href": "~/Api/TimeZone/Central%20Europe%20Standard%20Time",
                        "title": null,
                        "isTemplated": false
                    },
                    {
                        "rel": "tags",
                        "href": "~/Api/Tag/82",
                        "title": null,
                        "isTemplated": false
                    },
                    {
                        "rel": "dataVersions",
                        "href": "~/Api/MeasurementDataVersion/414",
                        "title": null,
                        "isTemplated": false
                    },
                    {
                        "rel": "annotations",
                        "href": "~/Api/Measurement/695/Annotations",
                        "title": null,
                        "isTemplated": false
                    }
                ],
                "_embedded": null
                },
                {
                    "measurementId": 4,
                    "title": "Stroj 2",
                    "description": "Access for presentations",
                    "quantityType": "speed",
                    "archived": false,
                    "first": "2016-01-01T00:00:00Z",
                    "rights": [
                        "Admin"
                    ],
                    "_links": [
                        {
                            "rel": "self",
                            "href": "~/Api/Measurement/696",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "timezone",
                            "href": "~/Api/TimeZone/Central%20Europe%20Standard%20Time",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "tags",
                            "href": "~/Api/Tag/83",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "dataVersions",
                            "href": "~/Api/MeasurementDataVersion/415",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "annotations",
                            "href": "~/Api/Measurement/696/Annotations",
                            "title": null,
                            "isTemplated": false
                        }
                    ],
                    "_embedded": null
                    }
                ],
                "_links": [
                    {
                        "rel": "self",
                        "href": "~/Api/Measurements",
                        "title": null,
                        "isTemplated": false
                    }
                ],
                "_embedded": null
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

# Group Measurement Data

Resources related to measurements data in the API.

## Measurement Time Series Aggregation Collection [/MeasurementTimeSeriesAggregationsQuery]

### List Measurement Time Series Aggregation [POST]

Gets list of Time Series Aggregation for the given measurement.

The `view` available for the given measurement is provided in the `results` of Measurement API endpoint.

In the response, each of the members of the `results` array contains objects:
* `query` - A copy of a query from the *request*, identifying which query the result belongs to.
* `outputFormat` - Array of fields present in the `data` array. The array defines the meaning of the *data* values
in their respective order, as they are n-uples put into a single, one-dimensional array.
The n-uple is described by n elements of the `outputFormat` array.
The array may contain the following values:
    * `itemCount` *int*. Omittable.
    * `timeSquareSum` *long*. Omittable.
    * `timeSum` *long*. Omittable.
    * `timeValueSum` *double*. Omittable.
    * `valueSum` *double*. Always present, specifies the count of items in the aggregation..
* `data` - The result of the query in format described by the `outputFormat` array.

+ Request (application/hal+json)
    + Attributes
        + Queries (object)
            + `MeasurementId` (number, required) - Identifies the ID of the measurement.
            + `From` (number, required) - Timestamp, specifies the lower bound of the data query.
            + `To` (number, required) - Timestamp, specifies the upper bound of the data query.
            + `View` (string, required) - Identifies the measurement view to be used.
            + `Precision` (number, required) - Specifies the number of precision.
    + Body

            {
                "Queries": [
                    {
                        "MeasurementId": 3,
                        "From": "2017-06-01T00:00:00Z",
                        "To": "2017-06-01T00:09:00Z",
                        "View": "Base.MinuteSet",
                        "Precision": "2"
                    },
                    {
                        "MeasurementId": 4,
                        "From": "2017-06-01T00:00:00Z",
                        "To": "2017-06-01T00:09:00Z",
                        "View": "Base.MinuteSet",
                        "Precision": "2"
                    }
                ]
            }

+ Response 200 (application/hal+json)
    + Attributes
        + results (array)
            + (object)
                + `view` (string, required) - Identifies the measurement view to be used.
                + `precision` (number, required) - Specifies the number of precision.
                + `measurementId` (number, required) - Identifies the ID of the measurement.
                + `from` (number, required) - Timestamp, specifies the lower bound of the data query.
                + `to` (number, required) - Timestamp, specifies the upper bound of the data query.

    + Body

            {
                "results": [
                    {
                        "query": {
                            "view": "Base.MinuteSet",
                            "precision": "2",
                            "measurementId": 3,
                            "from": "2017-05-31T22:00Z",
                            "to": "2017-05-31T22:09Z"
                        },
                        "outputFormat": [
                            "ValueSum"
                        ],
                        "data":[0,0,3,10,11,10,9,11,10,7],
                        "first":"2017-05-31Z22:00:00Z"
                    },
                    {
                        "query": {
                            "view": "Base.MinuteSet",
                            "precision": "2",
                            "measurementId": 4,
                            "from": "2017-05-31T22:00Z",
                            "to": "2017-05-31T22:09Z"
                        },
                        "outputFormat": [
                            "ValueSum"
                        ],
                        "data":[7,13,11,11,8,9,11,6,6,0],
                        "first":"2017-05-31Z22:00:00Z"
                    }
                ]
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

# Group Metadocuments

Resources related to metadocuments in the API.

## Add Metadocument [/Metadocuments]

### Add Metadocument [POST]

Adds metadocument of given type for the specific measurement.

+ Request
    + Attributes
        + `MeasurementId` (number, required) - Identifies the ID of the measurement.
        + `Title` (string) - Title of metadocument.
        + `Description` (string) - Description of the current document.
        + `CustomId` (string) - Specifies the customer (user) specific identificator.
        + `From` (string, required) - Specifies the metadocument validity from. Date time format is in ISO 8601???.
        + `To` (string, required) - Specifies the metadocument validity to. Date time format is in ISO 8601???.
        + `Setpoint` (number) - The setpoint for the metadocument.
        + `MetadocumentType` (number, required) - Identifies type of metadocument
            0 The undefined type.
            1 The annotation.
            2 The job.
            3 The downtime.
        + `Color` (string) - The color in hex color code.
        + `Operations` (string) - Specifies the operations for the curremnt metadocument.
        + `DowntimeCode` (string) - The code for down time.

+ Response 200 (application/hal+json)
    + Attributes
        + `guid` (string) - Specifies the metadocument command unique identifier.
        + `result` (string) - The command result.
        + `processeddate` (string) - Specifies the processed date of the command.
        + `metadocumentguid` (string) - Identifies the metadocument unique identifier.
        + `measurementId` (string) - Identifies the ID of the measurement.
        + `Rel` (string) - Relationship attribute of the link.
        + `Href` (string) - Specifies the URL of the link.

    + Body

            {
                "guid":"27a858a0-c244-4640-83f8-513dbc70c2e6",
                "result":"???",
                "processeddate":"???",
                "metadocumentguid":"58b448c2-c244-4640-83f8-513dbc70cdf5",
                "measurementId":3,
                "rel":"???",
                "href":"/Api/Metadocuments/58b448c2-c244-4640-83f8-513dbc70cdf5"
            }

+ Response 401  (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

## Get Metadocument [/Metadocuments/{?guid}]

### Get Metadocument [GET]

Gets metadocument with specific Guid.

+ Parameters
    + guid (string, required) - Specifies the unique identifier for the metadocument.

+ Response 200 (application/hal+json)
    + Attributes
        + `measurementId` (number, required) - Identifies the ID of the measurement.
        + `title` (string) - Title of metadocument.
        + `description` (string) - Description of the current document.
        + `customId` (string) - Specifies the customer (user) specific identificator.
        + `from` (string, required) - Specifies the metadocument validity from. Date time format is in ISO 8601???.
        + `to` (string, required) - Specifies the metadocument validity to. Date time format is in ISO 8601???.
        + `type` (number, required) - Identifies type of metadocument.
            0 The undefined type.
            1 The annotation.
            2 The job.
            3 The downtime.
        + `color` (string) - The color in hex color code.
        + `setpoint` (number) - The setpoint for the metadocument.
        + `operations` (string) - Specifies the operations for the curremnt metadocument.
        + `downtimeCode` (string) - The code for down time.
        + `creatorId` (number) - The unique identifier creator of metadocument.
        + `lastModified` (string) - The last modified date time. Date time format is in ISO 8601???.
        + _links (object)
            + self (object)
                + href (string, required) - Specifies the URL of the link.

    + Body

            {
                "guid":"27a858a0-c244-4640-83f8-513dbc70c2e6",
                "measurementId":3,
                "title":"Downtime title",
                "description":"Downtime description",
                "customid":"CustId-1",
                "from":"2017-06-26T05:30:00Z",
                "to":"2017-06-26T07:30:00Z",
                "setpoint":50.0,
                "type":3,
                "color":"#969614",
                "operations":"",
                "downtimecode":"E6",
                "creatorId":497,
                "lastModified":"2017-06-26T09:25:15Z",
                "_links": {
                    "self": {
                        "href":"/Api/Metadocuments/27a858a0-c244-4640-83f8-513dbc70c2e6"
                    }
                }
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

## Get Metadocuments [/MetadocumentsQuery]

### Get Metadocuments [POST]

Gets the metadocuments for a given measurement and time range.

+ Request (application/hal+json)
    + Attributes
        + Queries (object)
            + `MeasurementId` (number, required) - Identifies the ID of the measurement.
            + `From` (string, required) - Timestamp, specifies the lower bound of the data query. Date time format is in ISO 8601???.
            + `To` (string, required) - Timestamp, specifies the upper bound of the data query. Date time format is in ISO 8601???.
    + Body

            {
                "Queries": [
                    {
                        "MeasurementId": 3,
                        "From": "2017-05-31T22:00:00Z",
                        "To": "2017-06-01T19:59:59Z"
                    }
                ]
            }

+ Response 200 (application/hal+json)
    + Attributes
        + `responseContinuation` (string) - ???.
        + `dateTime` (string) - Date time of query. Date time format is in ISO 8601???.
        + _links (object)
            + self (object)
                + href (string, required) - Specifies the URL of the link.
        + `_embedded` (object)
            + `user` (array)
                + (object)
                    + `userId` (number) - The unique identifier of user.
                    + `name` (string) - The name of user.
                    + _links (object)
                        + self (object)
                            + href (string, required) - Specifies the URL of the link.
            + `metadocument` (array)
                + (object)
                    + `guid` (string) - Specifies the metadocument command unique identifier.
                    + `type` (number, required) - Identifies type of metadocument.
                        0 The undefined type.
                        1 The annotation.
                        2 The job.
                        3 The downtime.
                    + `creatorId` (number) - The unique identifier creator of metadocument.
                    + `measurementId` (number) - Identifies the ID of the measurement.
                    + `from` (string) - Timestamp, specifies the lower bound of the data query. Date time format is in ISO 8601???.
                    + `to` (string, required) - Timestamp, specifies the upper bound of the data query. Date time format is in ISO 8601???.
                    + `color` (string) - The color in hex color code.
                    + `lastModified` (string) - The last modified date time. Date time format is in ISO 8601???.
                    + _links (object)
                        + self (object)
                            + href (string, required) - Specifies the URL of the link.
                    + `_embedded` (object)
                        + `comment` (array)
                            + (object)
                                + `id` (number) - The identifier of comment.
                                + `text` (string) - Comment text.
                                + `modificationTime` (string) - Time when comment was modified. Date time format is in ISO 8601???.
                                + _links (object)
                                    + self (object)
                                        + href (string, required) - Specifies the URL of the link.
                                    + user (object)
                                        + href (string, required) - Specifies the URL of the link.
    + Body

            {
                "responseContinuation":"",
                "dateTime":"2017-07-13T07:03:03.211009Z",
                "_links": {
                    "self": {
                        "href":"/Api/MetadocumentsQuery/"
                    },
                "_embedded": {
                    "user": [
                        {
                            "userId":497,
                            "name":"Martin Kouďa",
                            "_links": {
                                "self": {
                                    "href":"/Api/User/497"
                                }
                            }
                        }
                    ],
                    "metadocument": [
                        {
                            "guid":"13f6a3b3-0416-49e9-81ed-fab139518c0d",
                            "type":1,
                            "creatorId":497,
                            "measurementId":3,
                            "from":"2017-06-01T10:18:00Z",
                            "to":"2017-06-01T10:18:00Z",
                            "color":"",
                            "lastModified":"2017-07-04T07:48:34Z",
                            "_links": {
                                "self": {
                                    "href":"/Api/Metadocuments/13f6a3b3-0416-49e9-81ed-fab139518c0d"
                                }
                            },
                            "_embedded": {
                                "comment": [
                                    {
                                        "id":0,
                                        "text":"Ahoj...",
                                        "modificationTime":"2017-07-03T12:00:56Z",
                                        "_links": {
                                            "self": {
                                                "href":"/Api/Metadocuments/13f6a3b3-0416-49e9-81ed-fab139518c0d/Comments/0/"
                                            },
                                            "user": {
                                                "href":"/Api/User/497"
                                            }
                                        }
                                    },
                                    {
                                        "id":1,
                                        "text":"Nazdar...",
                                        "modificationTime":"2017-07-04T07:48:41Z",
                                        "_links": {
                                            "self": {
                                                    "href":"/Api/Metadocuments/13f6a3b3-0416-49e9-81ed-fab139518c0d/Comments/1/"
                                                },
                                            "user": {
                                                "href":"/Api/User/497"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }

+ Response 401  (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

## Patch or Delete Metadocument [/Metadocuments/{?waitTimeout}]

### Patch Metadocument [PATCH]

Updates the metadocument with specific Guid and given parameters.

+ Parameters
    + waitTimeout (number, required) - Specifies the timeout on which response is either...???.

+ Request
    + Attributes
        + `Guid` (string, required) - Specifies the unique identifier for the metadocument.
        + `Title` (string) - Title of metadocument.
        + `Description` (string) - Description of the current document.
        + `CustomId` (string) - Specifies the customer (user) specific identificator.
        + `CreatorId` (number) - The unique identifier creator of metadocument.
        + `From` (string) - Specifies the metadocument validity from. Date time format is in ISO 8601???.
        + `To` (string) - Specifies the metadocument validity to. Date time format is in ISO 8601???.
        + `Color` (string) - The color in hex color code.
        + `Setpoint` (number) - The setpoint for the metadocument.
        + `Operations` (string) - Specifies the operations for the curremnt metadocument.

+ Response 200 (application/hal+json)
    + Attributes
        + guid (string) - Specifies the unique identifier for the metadocument.
        + `type` (number, required) - Identifies type of metadocument
            0 The undefined type.
            1 The annotation.
            2 The job.
            3 The downtime.
        + `title` (string) - Title of metadocument.
        + `creatorId`(number) - The unique identifier creator of metadocument.
        + `measurementId` (number) - Identifies the ID of the measurement.
        + `from` (string) - Specifies the metadocument validity from. Date time format is in ISO 8601???.
        + `to` (string) - Specifies the metadocument validity to. Date time format is in ISO 8601???.
        + `color` (string) - The color in hex color code.
        + `setpoint` (number) - The setpoint for the metadocument.
        + `lastModified` (string) - The last modified date time. Date time format is in ISO 8601???.
        + _links (object)
            + self (object)
                + href (string, required) - Specifies the URL of the link.

    + Body

            {
                "guid":"27a858a0-c244-4640-83f8-513dbc70c2e6",
                "type":3,
                "title":"Downtime title",
                "creatorId":497,
                "measurementId":3,
                "from":"2017-06-26T05:30:00Z",
                "to":"2017-06-26T07:30:00Z",
                "color":"#969614",
                "setpoint":50.0,
                "lastModified":"2017-06-26T09:25:15Z",
                "_links": {
                    "self": {
                        "href":"/Api/Metadocuments/27a858a0-c244-4640-83f8-513dbc70c2e6"
                    }
                }
            }

+ Response 401  (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

### Delete Metadocument [DELETE]

Deletes the metadocument with specific Guid.

+ Parameters
    + waitTimeout (number, required) - Specifies the timeout on which response is either...??? .

+ Response 200 (application/hal+json)
    + Body

            {
            }

+ Response 401  (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }